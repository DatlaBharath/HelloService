name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build_project:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install JDK and Maven
        run: |
          sudo apt update
          sudo apt install -y openjdk-17-jdk maven
      - name: Build project
        run: mvn clean install

  build_image:
    runs-on: self-hosted
    needs: build_project
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Build Docker image
        run: |
          docker build -t sakthisiddu1/HelloService:${{ github.run_number }} .

  push_image:
    runs-on: self-hosted
    needs: build_image
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Push Docker image
        run: |
          docker tag sakthisiddu1/HelloService:${{ github.run_number }} undefined/HelloService:latest
          docker push sakthisiddu1/HelloService:${{ github.run_number }}
          docker push sakthisiddu1/HelloService:latest

  deploy:
    runs-on: self-hosted
    needs: push_image
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Create Kubernetes deployment and service YAML
        run: |
          echo "
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: hello-deployment
          spec:
            replicas: 2
            selector:
              matchLabels:
                app: hello
            template:
              metadata:
                labels:
                  app: hello
              spec:
                containers:
                - name: hello
                  image: sakthisiddu1/HelloService:${{ github.run_number }}
                  ports:
                  - containerPort: 5000
          " > deployment.yaml
          echo "
          apiVersion: v1
          kind: Service
          metadata:
            name: hello-service
          spec:
            selector:
              app: hello
            ports:
              - protocol: TCP
                port: 80
                targetPort: 5000
                nodePort: 30007
            type: NodePort
          " > service.yaml
      - name: Deploy to Kubernetes
        run: |
          ssh -i /var/test.pem -o StrictHostKeyChecking=no ubuntu@13.233.108.0 "kubectl apply -f -" < deployment.yaml
          ssh -i /var/test.pem -o StrictHostKeyChecking=no ubuntu@13.233.108.0 "kubectl apply -f -" < service.yaml
