name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build_project:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Install Maven (if not already installed)
        run: |
          sudo apt update
          sudo apt install -y maven
    
      - name: Build the project
        run: |
          mvn clean install -DskipTests
          
  build_image:
    runs-on: self-hosted
    needs: build_project
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Build Docker image
        run: |
          DOCKER_IMAGE_NAME=sakthisiddu1/helloservice:${{ github.run_number }}
          docker build -t $DOCKER_IMAGE_NAME .
          echo $DOCKER_IMAGE_NAME > image_name.txt
          
      - name: Save Docker image name
        id: save_image_name
        run: echo "image_name=$(<image_name.txt)" >> $GITHUB_ENV
          
  push_image:
    runs-on: self-hosted
    needs: build_image
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          
      - name: Push Docker image to DockerHub
        run: |
          docker push ${{ env.image_name }}
          
  deploy:
    runs-on: self-hosted
    needs: push_image
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Create Kubernetes deployment
        run: |
          cat <<EOF > deployment.yaml
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: hello-service-deployment
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: hello-service
            template:
              metadata:
                labels:
                  app: hello-service
              spec:
                containers:
                - name: hello-service
                  image: ${{ env.image_name }}
                  ports:
                  - containerPort: 5000
          EOF
          
          cat <<EOF > service.yaml
          apiVersion: v1
          kind: Service
          metadata:
            name: hello-service
          spec:
            type: NodePort
            selector:
              app: hello-service
            ports:
              - nodePort: 30007
                port: 5000
                targetPort: 5000
          EOF
          
      - name: Deploy to Kubernetes
        run: |
          scp -i /var/test.pem -o StrictHostKeyChecking=no deployment.yaml ubuntu@13.233.108.0:/tmp/deployment.yaml
          ssh -i /var/test.pem -o StrictHostKeyChecking=no ubuntu@13.233.108.0 "kubectl apply -f /tmp/deployment.yaml"
          
          scp -i /var/test.pem -o StrictHostKeyChecking=no service.yaml ubuntu@13.233.108.0:/tmp/service.yaml
          ssh -i /var/test.pem -o StrictHostKeyChecking=no ubuntu@13.233.108.0 "kubectl apply -f /tmp/service.yaml"
