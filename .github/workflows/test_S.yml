name: Build and Push Docker Image
 
on:
  push:
    branches:
      - main  # Trigger the workflow on push to the main branch
 
jobs:
  build:
    runs-on: self-hosted
 
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Install Maven (if not already installed)
      run: |
        sudo apt update
        sudo apt install -y maven
 
    - name: Build with Maven
      run: mvn clean install -DskipTests
 
  build_image:
    runs-on: self-hosted
    needs: build  # This job depends on the 'build' job
 
    steps:
    - name: Build Docker image
      run: |
        IMAGE_NAME="sakthisiddu1/helloservice:${{ github.run_number }}"
        docker build -t $IMAGE_NAME .
  push_image:
    runs-on: [self-hosted]
    needs: build_image
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push Docker image
        run: |
          docker push sakthisiddu1/helloservice:${{ github.run_number }}

  deploy:
    runs-on: [self-hosted]
    needs: push_image
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create deployment YAML
        run: |
          echo "
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: helloservice-deployment
          spec:
            replicas: 2
            selector:
              matchLabels:
                app: helloservice
            template:
              metadata:
                labels:
                  app: helloservice
              spec:
                containers:
                - name: helloservice
                  image: sakthisiddu1/helloservice:${{ github.run_number }}
                  ports:
                  - containerPort: 5000
          " > deployment.yaml

      - name: Create service YAML
        run: |
          echo "
          apiVersion: v1
          kind: Service
          metadata:
            name: helloservice-service
          spec:
            type: NodePort
            selector:
              app: helloservice
            ports:
              - port: 5000
                targetPort: 5000
                nodePort: 30007
          " > service.yaml

      - name: Deploy to Kubernetes
        run: |
          cat deployment.yaml | ssh -i /var/test.pem -o StrictHostKeyChecking=no ubuntu@3.108.40.163 "kubectl apply -f -"
          cat service.yaml | ssh -i /var/test.pem -o StrictHostKeyChecking=no ubuntu@3.108.40.163 "kubectl apply -f -"
