name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        repository: DatlaBharath/HelloService
        ref: main

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '11'

    - name: Build with Maven
      run: mvn clean install -DskipTests

    - name: Build Docker Image
      run: docker build -t sakthisiddu1/helloservice:${{ github.run_number }} .

    - name: Log in to DockerHub
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      run: echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin

    - name: Push Docker Image
      run: docker push sakthisiddu1/helloservice:${{ github.run_number }}

    - name: Deploy to Kubernetes
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}
      run: |
        echo "
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: helloservice-deployment
          labels:
            app: helloservice
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: helloservice
          template:
            metadata:
              labels:
                app: helloservice
            spec:
              containers:
              - name: helloservice
                image: sakthisiddu1/helloservice:${{ github.run_number }}
                ports:
                - containerPort: 5000
        " > deployment.yaml

        echo "
        apiVersion: v1
        kind: Service
        metadata:
          name: helloservice-service
        spec:
          selector:
            app: helloservice
          ports:
          - protocol: TCP
            port: 5000
            targetPort: 5000
            nodePort: 30007
          type: NodePort
        " > service.yaml

        scp -i /home/ubuntu/.ssh/test.pem -o StrictHostKeyChecking=no deployment.yaml ubuntu@13.203.9.97:/home/ubuntu/deployment.yaml
        scp -i /home/ubuntu/.ssh/test.pem -o StrictHostKeyChecking=no service.yaml ubuntu@13.203.9.97:/home/ubuntu/service.yaml
        ssh -i /home/ubuntu/.ssh/test.pem -o StrictHostKeyChecking=no ubuntu@13.203.9.97 "kubectl apply -f /home/ubuntu/deployment.yaml"
        ssh -i /home/ubuntu/.ssh/test.pem -o StrictHostKeyChecking=no ubuntu@13.203.9.97 "kubectl apply -f /home/ubuntu/service.yaml"

    - name: Deployment Success
      if: success()
      run: echo 'Deployment was successful'

    - name: Deployment Failure
      if: failure()
      run: echo 'Deployment failed'
name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        repository: DatlaBharath/HelloService
        ref: main

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '17'

    - name: Build with Maven
      run: mvn clean install -DskipTests

    - name: Build Docker Image
      run: docker build -t sakthisiddu1/helloservice:${{ github.run_number }} .

    - name: Log in to DockerHub
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      run: echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin

    - name: Push Docker Image
      run: docker push sakthisiddu1/helloservice:${{ github.run_number }}

    - name: Deploy to Kubernetes
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}
      run: |
        echo "
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: helloservice-deployment
          labels:
            app: helloservice
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: helloservice
          template:
            metadata:
              labels:
                app: helloservice
            spec:
              containers:
              - name: helloservice
                image: sakthisiddu1/helloservice:${{ github.run_number }}
                ports:
                - containerPort: 5000
        " > deployment.yaml

        echo "
        apiVersion: v1
        kind: Service
        metadata:
          name: helloservice-service
        spec:
          selector:
            app: helloservice
          ports:
          - protocol: TCP
            port: 5000
            targetPort: 5000
            nodePort: 30007
          type: NodePort
        " > service.yaml

        scp -i /home/ubuntu/.ssh/test.pem -o StrictHostKeyChecking=no deployment.yaml ubuntu@13.203.9.97:/home/ubuntu/deployment.yaml
        scp -i /home/ubuntu/.ssh/test.pem -o StrictHostKeyChecking=no service.yaml ubuntu@13.203.9.97:/home/ubuntu/service.yaml
        ssh -i /home/ubuntu/.ssh/test.pem -o StrictHostKeyChecking=no ubuntu@13.203.9.97 "kubectl apply -f /home/ubuntu/deployment.yaml"
        ssh -i /home/ubuntu/.ssh/test.pem -o StrictHostKeyChecking=no ubuntu@13.203.9.97 "kubectl apply -f /home/ubuntu/service.yaml"

    - name: Deployment Success
      if: success()
      run: echo 'Deployment was successful'

    - name: Deployment Failure
      if: failure()
      run: echo 'Deployment failed'