name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        repository: 'https://github.com/DatlaBharath/HelloService'
        ref: 'main'

    - name: Set up Maven
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '17'

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build with Maven
      run: mvn clean install -DskipTests

    - name: Build Docker Image
      run: docker build -t sakthisiddu1/helloservice:${{ github.run_number }} .

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Push Docker Image
      run: docker push sakthisiddu1/helloservice:${{ github.run_number }}

    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'v1.18.0'

    - name: Create Kubernetes Deployment and Service YAML
      run: |
        echo "
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: helloservice-deployment
          labels:
            app: helloservice
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: helloservice
          template:
            metadata:
              labels:
                app: helloservice
            spec:
              containers:
              - name: helloservice
                image: sakthisiddu1/helloservice:${{ github.run_number }}
                ports:
                - containerPort: 5000
        " > deployment.yaml

        echo "
        apiVersion: v1
        kind: Service
        metadata:
          name: helloservice-service
        spec:
          selector:
            app: helloservice
          ports:
          - protocol: TCP
            port: 5000
            targetPort: 5000
            nodePort: 30007
          type: NodePort
        " > service.yaml

    - name: Deploy to Kubernetes
      run: |
        scp -i /home/ubuntu/.ssh/test.pem -o StrictHostKeyChecking=no deployment.yaml ubuntu@13.203.9.97:/home/ubuntu/deployment.yaml
        scp -i /home/ubuntu/.ssh/test.pem -o StrictHostKeyChecking=no service.yaml ubuntu@13.203.9.97:/home/ubuntu/service.yaml
        ssh -i /home/ubuntu/.ssh/test.pem -o StrictHostKeyChecking=no ubuntu@13.203.9.97 "kubectl apply -f /home/ubuntu/deployment.yaml"
        ssh -i /home/ubuntu/.ssh/test.pem -o StrictHostKeyChecking=no ubuntu@13.203.9.97 "kubectl apply -f /home/ubuntu/service.yaml"