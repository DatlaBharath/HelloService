name: CI-CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build_project:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Install Maven
        run: |
          sudo apt update
          sudo apt install -y maven
      - name: Build project
        run: mvn clean install -DskipTests

  build_image:
    runs-on: self-hosted
    needs: build_project
    steps:
      - name: Build Docker image
        run: docker build -t sakthisiddu1/helloservice:${{ github.run_number }} .

  push_image:
    runs-on: self-hosted
    needs: build_image
    steps:
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Push image to DockerHub
        run: docker push sakthisiddu1/helloservice:${{ github.run_number }}

  deploy:
    runs-on: self-hosted
    needs: push_image
    steps:
      - name: Create deployment.yaml
        run: echo "
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: hello-deployment
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: hello-app
            template:
              metadata:
                labels:
                  app: hello-app
              spec:
                containers:
                - name: hello-container
                  image: sakthisiddu1/helloservice:${{ github.run_number }}
                  ports:
                  - containerPort: 5000
          " > deployment.yaml
      - name: Create service.yaml
        run: echo "
          apiVersion: v1
          kind: Service
          metadata:
            name: hello-service
          spec:
            selector:
              app: hello-app
            ports:
              - protocol: TCP
                port: 5000
                targetPort: 5000
                nodePort: 30007
            type: NodePort
          " > service.yaml
      - name: Deploy to Kubernetes
        run: |
          ssh -o StrictHostKeyChecking=no -i /home/ubuntu/.ssh/test.pem ubuntu@13.203.9.97 "kubectl apply -f -" < deployment.yaml
          ssh -o StrictHostKeyChecking=no -i /home/ubuntu/.ssh/test.pem ubuntu@13.203.9.97 "kubectl apply -f -" < service.yaml