{"pipeline":{"name":"EC2 Deployment Pipeline","identifier":"ec2_deployment_pipeline","projectIdentifier":"default_project","orgIdentifier":"default","tags":{},"stages":[{"stage":{"name":"Build and Deploy Stage","identifier":"Build_And_Deploy_Stage","type":"Custom","spec":{"execution":{"steps":[{"step":{"name":"Checkout Code","identifier":"Checkout_Code","type":"ShellScript","spec":{"shell":"Bash","source":{"type":"Inline","spec":{"script":"echo \"Checking out code from main branch...\"\ngit clone -b main https://github.com/user/repo.git\ncd repo\npwd\nls\n"}},"executionTarget":{},"environmentVariables":[],"outputVariables":[]},"timeout":"10m"}},{"step":{"name":"Build Project","identifier":"Build_Project","type":"ShellScript","spec":{"shell":"Bash","onDelegate":true,"source":{"type":"Inline","spec":{"script":"cd repo\nmvn clean install -DskipTests\n"}}}}},{"step":{"name":"Build Docker Image","identifier":"Build_Image","type":"ShellScript","spec":{"shell":"Bash","onDelegate":true,"source":{"type":"Inline","spec":{"script":"cd repo\ndocker build -t sakthisiddu1/repo:<+pipeline.sequenceId> .\n"}}}}},{"step":{"name":"Push Docker Image","identifier":"Push_Image","type":"ShellScript","spec":{"shell":"Bash","onDelegate":true,"environmentVariables":[{"name":"DOCKERHUB_USERNAME","type":"String","value":"<+secrets.getValue(\"dockerhub-username\")>"},{"name":"DOCKERHUB_PASSWORD","type":"String","value":"<+secrets.getValue(\"dockerhub-password\")>"}],"source":{"type":"Inline","spec":{"script":"echo \"$DOCKERHUB_USERNAME\"\necho \"$DOCKERHUB_PASSWORD\"\necho \"$DOCKERHUB_PASSWORD\" | docker login -u \"$DOCKERHUB_USERNAME\" --password-stdin\ndocker push $DOCKERHUB_USERNAME/repo:<+pipeline.sequenceId>\n"}}}}},{"step":{"name":"Deploy to Kubernetes","identifier":"Deploy_Kubernetes","type":"ShellScript","spec":{"shell":"Bash","onDelegate":true,"source":{"type":"Inline","spec":{"script":"echo \"Creating deployment.yaml and service.yaml...\"\n\ncat <<EOF > deployment.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: repo-deployment\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: repo\n  template:\n    metadata:\n      labels:\n        app: repo\n    spec:\n      containers:\n      - name: repo\n        image: sakthisiddu1/repo:<+pipeline.sequenceId>\n        ports:\n        - containerPort: 5000\nEOF\n\ncat <<EOF > service.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: repo-service\nspec:\n  type: NodePort\n  selector:\n    app: repo\n  ports:\n    - port: 5000\n      targetPort: 5000\n      nodePort: 30007\nEOF\n\necho \"Deploying to Kubernetes via SSH...\"\n\nssh -o StrictHostKeyChecking=no -i /home/harness/.ssh/deploy.pem ubuntu@ec2-k8s-instance \"kubectl apply -f -\" < deployment.yaml\nssh -o StrictHostKeyChecking=no -i /home/harness/.ssh/deploy.pem ubuntu@ec2-k8s-instance \"kubectl apply -f -\" < service.yaml\n"}}}}}]}}}}]}}