pipeline:
  name: build
  identifier: build
  projectIdentifier: default_project
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: Build and Deploy Stage
        identifier: Build_And_Deploy_Stage
        type: Custom
        spec:
          execution:
            steps:
              - step:
                  name: Checkout Code
                  identifier: Checkout_Code
                  type: ShellScript
                  spec:
                    shell: Bash
                    source:
                      type: Inline
                      spec:
                        script: |
                          echo "Cloning repository from GitHub main branch..."
                          git clone -b main https://github.com/DatlaBharath/helloservice.git
                          cd helloservice
                          pwd
                          ls
                    executionTarget: {}
                    environmentVariables: []
                    outputVariables: []
                  timeout: 10m
              - step:
                  name: Build Project with Maven
                  identifier: Build_Project_with_Maven
                  type: ShellScript
                  spec:
                    shell: Bash
                    onDelegate: true
                    source:
                      type: Inline
                      spec:
                        script: |
                          cd helloservice
                          mvn clean install -DskipTests
              - step:
                  name: Build Docker Image
                  identifier: Build_Docker_Image
                  type: ShellScript
                  spec:
                    shell: Bash
                    onDelegate: true
                    source:
                      type: Inline
                      spec:
                        script: |
                          cd helloservice
                          docker build -t sakthisiddu1/helloservice:<+pipeline.sequenceId> .
              - step:
                  name: Push Docker Image
                  identifier: Push_Docker_Image
                  type: ShellScript
                  spec:
                    shell: Bash
                    onDelegate: true
                    environmentVariables:
                      - name: DOCKERHUB_USERNAME
                        type: String
                        value: <+secrets.getValue("dockerhub-username")>
                      - name: DOCKERHUB_PASSWORD
                        type: String
                        value: <+secrets.getValue("dockerhub-password")>
                    source:
                      type: Inline
                      spec:
                        script: |
                          echo "Logging into Docker Hub..."
                          echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
                          docker push sakthisiddu1/helloservice:<+pipeline.sequenceId>
              - step:
                  name: Deploy to Kubernetes
                  identifier: Deploy_to_Kubernetes
                  type: ShellScript
                  spec:
                    shell: Bash
                    onDelegate: true
                    source:
                      type: Inline
                      spec:
                        script: |
                          echo "Creating deployment.yaml and service.yaml..."
                          cat <<EOF > deployment.yaml
                          apiVersion: apps/v1
                          kind: Deployment
                          metadata:
                            name: helloservice-deployment
                          spec:
                            replicas: 2
                            selector:
                              matchLabels:
                                app: helloservice
                            template:
                              metadata:
                                labels:
                                  app: helloservice
                              spec:
                                containers:
                                - name: helloservice
                                  image: sakthisiddu1/helloservice:<+pipeline.sequenceId>
                                  ports:
                                  - containerPort: 5000
                          EOF

                          cat <<EOF > service.yaml
                          apiVersion: v1
                          kind: Service
                          metadata:
                            name: helloservice-service
                          spec:
                            type: NodePort
                            selector:
                              app: helloservice
                            ports:
                              - port: 5000
                                targetPort: 5000
                                nodePort: 30007
                          EOF

                          echo "Deploying to Kubernetes..."
                          ssh -i /home/harness/.ssh/test.pem -o StrictHostKeyChecking=no ubuntu@3.108.54.8 "kubectl apply -f deployment.yaml"
                          ssh -i /home/harness/.ssh/test.pem -o StrictHostKeyChecking=no ubuntu@3.108.54.8 "kubectl apply -f service.yaml"

                          echo "Cleaning up..."
                          rm -rf helloservice